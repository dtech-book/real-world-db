= 階層をもつカテゴリーの設計

本章では、ECシステムのオープンソースプロダクトであるEC-CUBEとSpreeのカテゴリー設計を取り上げます。
今回取り上げるカテゴリーは、階層構造を持つことができます。

== 階層構造を扱うことの難しさ

EC-CUBE・Spreeともに、カテゴリーを@<img>{ec-category-hierarchy-first-tree}のように親と子を持った階層構造として表現できます。

//image[ec-category-hierarchy-first-tree][階層構造をもつカテゴリー]

リレーショナル・データベース(RDB)は、データを列と行を用いた2次元の表形式で保存します。
このため、木構造のような再帰的構造をもつデータを表現するのが苦手とされています。

この弱点を克服するために、RDBの製品によっては階層的なデータ構造を扱えるよう、再帰クエリをサポートしているものがあります。
再帰クエリをサポートしていない場合は、RDBで扱いやすいようなデータモデルを採用する必要があります。


== EC-CUBEのカテゴリー設計

EC-CUBEは、カテゴリーを@<img>{ec-category-hierarchy-ec-cube-naive-with-table}のようなテーブルで表現します。
このモデルは@<b>{隣接リスト}と呼ばれ、各レコードに親へのIDを持つことで木構造を表現しています。

//image[ec-category-hierarchy-ec-cube-naive-with-table][EC-CUBEのカテゴリー設計]

隣接リストはテーブル構造がシンプルな反面、再帰的なSQLの表現をサポートしているRDBでなければ
データの取得が困難である、いう欠点も持っています。
例えば、「食品」カテゴリーの下にあるすべてのカテゴリーを取り出すといったクエリは、
再帰SQL(WITH RECURSIVE)を用いないと簡単に書くことはできません。

隣接モデルの利点欠点、データ取得方法については、後述の@<hd>{ec-category-hierarchy|階層型データを格納するためのモデル設計}にて詳しく解説します。

== Spreeのカテゴリー設計


//image[ec-category-hierarchy-spree-cset][Spreeのカテゴリー設計]


== 階層型データを格納するためのモデル設計

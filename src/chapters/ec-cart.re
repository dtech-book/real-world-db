= ショッピングカートの設計

本章では、EC-CUBEとSpreeのショッピングカートの設計を取り上げます。

== ECにおけるショッピングカート

多くのECサイトでは、ショッピングカート機能(カート機能)が備わっています。
ショッピングカートとは、ユーザーが買いたい商品を一時的にリストアップできる機能です。

今回取り上げるカートには、以下機能が備わっています。

 * 指定した商品を1つないし複数個カートに入れることができる
 * 配送先、配送方法、決済方法を指定後にカートに入れた商品を注文できる

カートの実装では、以下の点に注意する必要があります。

 * 在庫引当のタイミング
 * カート投入後に商品価格が変わった場合の対応

今回取り上げるECシステムは、在庫の引当は決済が完了した時点で行います。
このため、注文手続き中に他のお客様の購入手続きが完了すると、在庫切れのため発注できない可能性があります。

サイトによっては、在庫引当をカート投入時に行うこともあります。
カート投入時引当を採用している場合は、商品をカートに入れたまま一定時間が経過したら、カート情報を削除し在庫を戻すといった対応が必要です。

カートの実装では、商品の価格変更にも気を使う必要があります。
カートに商品を入れ決済手続きを行っている途中に商品の価格改定が発生した場合でも、決済はカートに入れた時点の価格で行う必要があります。


== EC-CUBEのカート設計

EC-CUBEは、カートの商品を@<img>{ec-cart-eccube-cart-model}のテーブルで管理します。

//image[ec-cart-eccube-cart-model][EC-CUBEのカート設計]

カートテーブルでは、以下情報を管理します。

 * 商品ID
 * 商品数量
 * 商品価格 (カート投入時の価格)


== Spreeのカート設計

Spreeは図Nのテーブルでカート情報を管理します。

// ここに図を追加


EC-CUBEと違い、Spreeはカート専用の管理テーブルを持たず、
カート情報と注文は同じテーブルで管理します。

注文情報はordersとline_itemsテーブルで管理します。
ordersテーブルでは注文情報を管理しており、各商品の合計金額や配送情報を持っています。
line_itemsには注文の明細が入っており、各商品をいくつ、いくらで買うかという情報を持っています。
ordersとline_itemの関係は図Nのとおりです。

// ここに図を追加


ordersテーブルが管理する情報は以下のとおりです。

line_itemsテーブルが管理する情報は以下のとおりです。

 * 商品ID (variant_id)
 ** 購入する商品の商品バリエーションID
 *


ordersテーブルは、カートに入った注文状態を管理するstateという区分を持っています。
stateが取る値は次のとおりです。

 * cart
 ** 商品をカートに入れた状態
 * address
 ** 配送先入力まで進んだ状態
 * delivery
 ** 配送方法入力まで進んだ状態
 * payment
 ** 決済情報入力まで進んだ状態
 * complete
 ** 商品注文が完了した状態

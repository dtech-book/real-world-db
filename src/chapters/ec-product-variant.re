= 商品マスタの設計

本章では、ECシステムの商品マスタの設計について、実際のプロダクトに使われているDBをみながら議論していきます。
ECのオープンソースプロダクトであるSpree及びEC-CUBEの商品マスタを取り上げ、
さまざまなケースを想定しながら最適な商品DB設計は何かを考えていきます。

== バリエーションを持つ商品

多くのECシステムでは、商品にバリエーションという概念を持たせることができます。
商品のバリエーションとは何でしょうか。

例えばTシャツを販売しているECを運用しているとしましょう。
同じTシャツでも、色違いのもの、サイズ違いのものといったように、同じ商品で特定の特性だけが異なるデータを持たせたいことがあります。
Spreeでは、これら特性の違う商品を@<strong>{バリアント}と呼び、EC-CUBEでは@<strong>{規格}と呼んでいます。

 * バリエーションの例
  ** A社製 Tシャツ (商品)
	*** A社製 Tシャツ Sサイズ (商品バリエーション)
	*** A社製 Tシャツ Mサイズ (商品バリエーション)
	*** A社製 Tシャツ Lサイズ (商品バリエーション)

今後、バリアント及び規格のことを、本書では@<strong>{商品バリエーション}と呼ぶことにします。

=== Spreeの商品バリエーションの設計

Spreeは、商品バリエーションを@<img>{ec-product-variant-spree-product-er}のようなテーブルで保持します。

//image[ec-product-variant-spree-product-er][Spreeの商品と商品バリエーションの関係][scale=1.0]

==== 商品テーブル

商品テーブルでは、商品名・商品の説明といった商品の基本情報を持ちます。

==== 商品バリエーション

商品バリエーションテーブルは、バリエーション毎の情報を持つテーブルです。
SKU(スキュー: 在庫管理を行うときの最小の単位)や価格の情報を持ちます。
ショップの利用者は商品バリエーション単位で商品を買うこととなります。

1つの商品は@<b>{1つ以上}の商品バリエーションを持つこととなります(@<img>{ec-product-variant-spree-rel})。
1つ目のバリエーションレコードを、マスタバリエーションと呼びます。
たとえバリエーションを持たない商品であっても、マスタバリエーションは必要です。

//image[ec-product-variant-spree-rel][商品バリエーションのレコードの持ち方][scale=1.0]

バリエーションを新たに追加した際は、マスタバリエーションから情報を引き継いで新しいレコードが作成されます。

  * バリエーションを必要としない商品の場合
	** マスタバリエーションに商品の価格情報など商品基本情報を持ちます
	** ショップ利用者はマスタバリエーションをカートに入れて購入できます
	* バリエーションを必要とする商品の場合
	** マスタバリエーションは単なるダミーデータとなります
	** バリエーションが存在する場合は、ショップ利用者はマスタバリエーションを購入することはできません
	** マスタバリエーションとは別に、バリエーションのパターンごとに商品バリエーションレコードを持つこととなります


==== オプションタイプ / オプション値

商品の特性を管理するための情報を持ちます。
オプションタイプは、例えば商品のサイズや色といった情報を持ちます。
オプション値は、サイズに対するS/M/L、色に対する赤/青といった情報を持ちます(@<img>{ec-product-variant-spree-option})。

//image[ec-product-variant-spree-option][Spreeのオプション][scale=1.0]

商品バリエーションとオプションを@<img>{ec-product-variant-spree-p2}のように関連付けることでバリエーションを表現しています。

//image[ec-product-variant-spree-p2][Spreeの商品バリエーションとオプションの関連][scale=1.0]


==== バリエーション/オプション関連

あるテーブルの複数のレコードが複数の別のテーブルと関連付けられている状態を、多対多のリレーションを持っている状態と呼びます。
商品バリエーションとオプションは多対多のリレーションを持つことができます。

Tシャツを販売している場合、@<img>{ec-product-variant-spree-p3}のように、サイズと色の組み合わせの商品バリエーションを作成できます。


//image[ec-product-variant-spree-p3][複数のバリエーションをもつ商品][scale=1.0]


多対多のリレーションは中間テーブルを持つことで表現でき、バリエーション/オプション関連テーブルは中間テーブルとなります。
商品バリエーションとオプションは、@<img>{ec-product-variant-spree-option-value-rel}のようなレコードで表現します。


//image[ec-product-variant-spree-option-value-rel][Spreeの商品バリエーションとオプションの関連][scale=1.0]


=== EC-CUBEの商品バリエーションの設計

EC-CUBEは、商品バリエーションを@<img>{ec-product-variant-spree-product-er}のようなテーブルで保持します。

//image[ec-product-variant-eccube-product-model][EC-CUBEの商品バリエーション]

データの持ち方はSpreeと似ています。Spreeと異なる部分のみ説明します。

==== 商品規格情報

商品バリエーションテーブルは、バリエーション毎の情報を持つテーブルです。
1つの商品は1つ以上のバリエーションを持つことになります。

バリエーションを必要としない商品であっても、商品と商品規格情報テーブルは1:1の関連で必ずバリエーションのレコードを持ちます。
これはSpreeでのマスタフラグ(@<img>{ec-product-variant-spree-rel})と考え方は全く同じです。
バリエーションが必要な場合は、(表示非表示フラグで非表示状態とした)ダミーレコードを1つ持ちつつ、バリエーション毎のレコード情報を新たに持ちます。

商品規格情報と規格分類情報との関連付けの方法が、Spreeと異なります。
EC-CUBEでは、商品規格情報テーブルに分類へのIDを直接持っています。
分類IDは2つまで設定できるよう、分類情報ID_1 と 分類情報ID_2 の2つが用意されています。


=== 設計検討: 商品バリエーションの組み合わせは最大何パターンあるか

EC-CUBE方式の商品設計だと、バリエーションの組み合わせは最大2パターンまでしか追加できません。

#@# マルチカラムアトリビュートの問題点
#@# バリエーションが1パターンしかない場合は、商品バリエーションと規格情報を直接紐付けるのはあり
#@# テーブルが少なく実装がシンプルになるため

#@# バリエーションの組み合わせが2つ以上でてくることがわかった時点で、Spreeのように商品バリエーションと規格の
#@# 中間テーブルを持つように設計しなおすことをおすすめします
#@# もし規格を3パターン持ちたくなった場合、さらにカラムを追加して 分類情報ID_3 をもつのはNGです
#@# マルチカラムアトリビュート


=== 設計検討: バリエーションが存在しない商品に、商品バリエーションレコードは必要か
